version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=aether
      - POSTGRES_PASSWORD=aether
      - POSTGRES_DB=aether_meta
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nats:
    image: nats:2.9-alpine
    ports:
      - "4222:4222"
      - "8222:8222" # for monitoring

  neo4j:
    image: neo4j:5-community
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j_data:/data

  api-gateway:
    build:
      context: ./packages/backend/api-gateway
    environment:
      - POSTGRES_URL=postgres://aether:aether@postgres:5432/aether_meta
      - NATS_URL=nats://nats:4222
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - nats

  orchestrator:
    build:
      context: ./packages/backend/orchestrator
    environment:
      - POSTGRES_URL=postgres://aether:aether@postgres:5432/aether_meta
      - NATS_URL=nats://nats:4222
    depends_on:
      - postgres
      - nats

  agent-worker:
    build:
      context: ./packages/backend/agent-worker
    environment:
      - POSTGRES_URL=postgres://aether:aether@postgres:5432/aether_meta
      - NATS_URL=nats://nats:4222
      - NATS_QUEUE=generic-agent-workers
    depends_on:
      - postgres
      - nats

  web-console:
    build:
      context: ./packages/web-console
    environment:
      - NEXT_PUBLIC_GRAPHQL_URL=http://localhost:4000
      - INTERNAL_GRAPHQL_URL=http://api-gateway:4000
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway

  sgr-engine:
    build:
      context: ./packages/backend/sgr-engine
    ports:
      - "50051:50051"

  mcp-registry:
    build:
      context: ./packages/backend/mcp-registry
    ports:
      - "8080:8080"

volumes:
  postgres_data:
  neo4j_data:
